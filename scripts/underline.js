document.addEventListener("DOMContentLoaded",()=>{const nav=document.querySelector("nav");if(!nav)return;const links=Array.from(nav.querySelectorAll("a"));const underline=nav.querySelector(".underline");function moveUnderline(el){if(!underline||!el){if(underline)underline.style.width="0";return}
const navRect=nav.getBoundingClientRect();const rect=el.getBoundingClientRect();underline.style.width=`${rect.width}px`;underline.style.left=`${rect.left - navRect.left}px`}
function setActive(link){links.forEach(l=>l.classList.remove("active"));if(link)link.classList.add("active");}
function updateURL(hash){if(history.replaceState){history.replaceState(null,"",hash)}else{location.hash=hash}}
const sections=links.map(link=>{const id=link.getAttribute("href");if(id&&id.startsWith("#")){const el=document.querySelector(id);if(el)return{link,section:el,id}}
return null}).filter(Boolean);const observer=new IntersectionObserver((entries)=>{entries.forEach(entry=>{if(entry.isIntersecting){const match=sections.find(s=>s.section===entry.target);if(match){setActive(match.link);moveUnderline(match.link);updateURL(match.id)}}})},{root:null,rootMargin:"0px 0px -50% 0px",threshold:0.5});sections.forEach(({section})=>observer.observe(section));const active=nav.querySelector("a.active");moveUnderline(active);window.addEventListener("resize",()=>{const active=nav.querySelector("a.active");moveUnderline(active)})})